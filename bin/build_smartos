#!/bin/bash
#
# build_smartos - Image builder for SmartOS images
# https://git.joyent.com:mibe
#
# Copyright (c) 2014 Joyent Inc., All rights reserved.

set -o errexit
set -o pipefail
#set -o nounset
#set -o xtrace
#export 'PS4=+ $me.$LINENO ';

usage() {
	cat <<- EOF >&2

	build_smartos - version ${mi_version}
	Image builder for SmartOS images

	Usage: $0 [options] BUILD_REPO

	Options:

	       None at this time.

	Arguments:
    
	       BUILD_REPO      Build repository to use which contains the necessary
	                       build files for the image.
	                       e.g. mi-percona

	EOF

	exit 1;
}
mi_version="1.0.0";

shift $(($OPTIND - 1))
if [[ $# = 1 ]]; then
        mi_brepo="$1";
else
        usage;
fi

# Set mi_home and source mi_home/lib/mibe.inc if exists
mi_home=$(dirname $(cd ${0%/*} && pwd -P));
[[ -s "${mi_home}/lib/mibe.inc" ]] && source ${mi_home}/lib/mibe.inc || { echo "* ERROR - ${mi_home}/lib/mibe.inc not found, can't continue."; exit 1; }

trap zone_cleanup_sighandler INT TERM;

printf "\nbuild_smartos - version ${mi_version}\n";
printf "Image builder for SmartOS images\n";

# Get repository directory and variables
get_reposdir;

# Sanity check everything before starting
build_sanitycheck;

# Configure the build zone for imaging
# This will create the vm, backup zonepath, halt,
# configure, and boot the build zone
zone_configure_buildzone;

# Copy "copy" directory into build zone
zone_copyin_files;

# Create motd, product, and install packages in the build zone
zone_create_motdproduct;
zone_install_packages;

# Execute the customize script in the build zone
zone_exec_customize;

# Halt build zone and un-configure it
zone_unconfigure_buildzone;

# Create dump of build zone
zone_create_dumpmanifest;

# Delete the build zone and filesystems
zone_delete_vm;

printf "Image:    ${mi_bfinal_dump}\n";
printf "Manifest: ${mi_bfinal_manifest}\n\n";
printf "Manifest_dsapi: ${mi_bfinal_manifest_dsapi}\n\n";

exit 0;
